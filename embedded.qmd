---
title: "Embedded data visualization Example"
format: html
---
```{r setup, echo=FALSE, include=FALSE}

library(dplyr)
library(tidyverse)
library(plotly)
library(ggplot2)
library(ggrepel)
library(shiny)
library(grid)
library(readr)
library(rmarkdown)
library(emojifont)
library(ggrepel)
library(readr)


Mtb_results_UVannotations <- readr::read_csv("EmbeddedFiles/Interactomics_CombinedUVandMtbData.csv")

Mtb_WTvsMock_data <- Mtb_results_UVannotations |>
  filter(comparison == "H37Rv_24h - Mock_24h" | comparison == "H37Rv_96h - Mock_96h") |>
  select(gene_name, logFC, pvalue, GG_StatAnnotation, Trend_in_UV_expt, comparison,sample)

Mtb_WTvsMock_data$GG_StatAnnotation <- factor(pull(Mtb_WTvsMock_data, GG_StatAnnotation), levels = c("no hit", "candidate", "hit"))
Mtb_WTvsMock_data$sample <- factor(pull(Mtb_WTvsMock_data, sample), levels = c("Sph", "FA_8_3"))



datasetLimits.x<-c(-max(abs(Mtb_WTvsMock_data$logFC)),max(abs(Mtb_WTvsMock_data$logFC)))
datasetLimits.y<-c(0,max(-log10(Mtb_WTvsMock_data$pvalue)))

comparison.labs <- c("H37Rv vs Mock, 24hrs", "H37Rv vs Mock, 96hrs")
names(comparison.labs) <- c("H37Rv_24h - Mock_24h", "H37Rv_96h - Mock_96h")

sample.labs <- c("Tf-Sphingosine", "Tf-Fatty Acid")
names(sample.labs) <- c("Sph", "FA_8_3")


Mtb_WTvsMock_ggplots <- ggplot(data = Mtb_WTvsMock_data,
                               aes(x = logFC,
                                   y = -log10(pvalue),
                                   fill = factor(GG_StatAnnotation),
                                   alpha = Trend_in_UV_expt,
                                   shape = Trend_in_UV_expt,
                                   size = Trend_in_UV_expt,
                                   color = factor(GG_StatAnnotation))) +
  geom_hline(yintercept = 0, linetype = 2) +
  geom_vline(xintercept = 0, linetype = 2) +
  scale_x_continuous(limits =  datasetLimits.x) +
  scale_y_continuous(limits =  datasetLimits.y)+
  geom_point(stroke = 0.15, aes(text = paste0("Gene name: ", gene_name,
                               "\n","LogFC: ", logFC,
                               "\n","p-value: ", pvalue,
                               "\n","UV Trend: ", Trend_in_UV_expt,
                               "\n","Mtb enrichment: ", GG_StatAnnotation))) +
  scale_alpha_manual(values=c("Partially Enriched" = 0.25,
                              "Significantly Enriched" = .5,
                              "Depleted" = 0.125,
                              "No +/-UV data" = 0.25),
                     name="+/-UV results")+
  scale_shape_manual(values=c("Partially Enriched" = 24,
                              "Significantly Enriched" = 21,
                              "Depleted" = 22,
                              "No +/-UV data" = 23),
                     name="+/-UV results")+
  scale_size_manual(values=c("Partially Enriched" = 1.5,
                             "Significantly Enriched" = 3,
                             "Depleted" = 0.5,
                             "No +/-UV data" = 1.5),
                    name="+/-UV results")+
  scale_fill_manual(values=c("no hit" = "black", 
                             "candidate" = "purple", 
                             "hit" = "orange"),
                    name = "Mtb Annotation") +
  scale_color_manual(values = c("no hit" = "black", 
                                "candidate" = "black", 
                                "hit" = "black"),
                     name = "Mtb Annotation") + 
  xlab("log2(fold change)")+
  ylab("-log10(pvalue")+  
  geom_text_repel(data = subset(Mtb_WTvsMock_data, GG_StatAnnotation == "hit"),
                  aes(x = logFC, y = -log10(pvalue), label = gene_name),
                  colour = "black",
                  size = 3,
                  point.padding = 0.5,
                  box.padding = 0.5,
                  alpha = 0.75,
                  force = 0.5,
                  force_pull = 5,
                  max.overlaps = 10)+
  theme_minimal()+
  guides(fill = guide_legend(
    ncol = 1,
    bycol = TRUE,
    override.aes = list(shape = 21, size = 3, alpha = 1, color = "black")
  )) +
  theme(axis.line=element_line())+
  theme(axis.ticks.length = unit(-5, "pt"))+
  theme(panel.spacing.x = unit(1, "lines"))+
  theme(panel.spacing.y = unit(2, "lines"))+
  facet_grid(cols = vars(comparison), rows = vars(sample), 
             labeller = labeller(comparison = comparison.labs,
                                 sample = sample.labs))
                                 
Mtb_WTvsMock_ggplotly <- plotly::ggplotly(Mtb_WTvsMock_ggplots, 
                 tooltip = c("text", dynamicTicks = TRUE),
                 hovermode="closest",
                 autosize = T, 
                 margin = m) |>
                 layout(showlegend = FALSE)


```

## Baseline trifunctional probe analysis

In this visualization tool, we have prepared the results of the baseline trifunctional probe analysis. In this experiment, we treated cells with four trifunctional probes to compare the proteins which interact with each probe. The goal of this experiment was to assess the similarities and differences between the interactomes of each probe.

### Experimental Design

THP-1 macrophages were activated and treated with each of the 4 lipid probes in quadruplicate. After treatment, +UV samples were irradiated with UV light to crosslink with interacting proteins. -UV samples were kept in the dark and reflect non-specific interactions. Each sample was collected via cell lysis and lipid-interacting proteins were enriched via a click chemistry-assisted bead pulldown. Enriched proteins were digested off the beads with trypsin, and analyzed using quantitative mass spectrometry. Proteins were identified using their m/z fragmentation and quantified using Tandem Mass Tagging. Below are several ways to depict these data.

![](/EmbeddedFiles/BaselineProteomics_ExperimentalDesign.png)

### Volcano plots

Not here yet in this example site.

## Trifunctional probe interactomics during Mtb infection infection

In this visualization tool, we have prepared the results of two independent mass spectrometry analyses. The tf-Sphingosine-treated samples are one complete dataset, and the tf-8:3-Fatty acid-treated samples are another. This visualization tool will allow you to qualitatively look at these results side-by-side and even against each other, but please note that quantitative differences should be viewed skeptically.

### Experimental Design

![](/EmbeddedFiles/MtbProteomics_ExperimentalDesign.png)

### Volcano plots

Volcano plots are a very common way to look at ratiometic data, capturing both the relative enrichment of each protein between two conditions (here log2 transformed +UV versus -UV on the x-axis) and the statistical p-value of each protein (here -log10 transformed on the y-axis). Proteins with log2(+UV/-UV)>0 are more enriched in the +UV condition than the -UV condition - here denoted in purple as 'partially enriched'. If a protein has a log2(+UV/-UV)>1 and a p-value<0.05, it has been denoted in orange as 'significantly enriched'.

:::{.border}
```{r, echo=FALSE}
Mtb_WTvsMock_ggplotly
```
:::


### MA Plots

### Comparison Plots

